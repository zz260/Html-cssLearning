p{
    color: rgb(224, 15, 15);
    background-color: cornflowerblue;
}
/*
    样式的继承：我们为元素设置一个样式，同时样式也会继承到他的后代元素中
    继承发生在祖先和后代元素之间
    并不是所有的样式都会被继承，比如和背景，布局相关的就不能被继承
    样式冲突
        -当我们通过不同方式选择相同元素，同时为元素设置相同属性不同值时，会发生冲突
        发生冲突则以权重确定优先级
        选择器权重：
            内联样式        1,0,0,0
            id选择器        0,1,0,0
            类和伪类选择器   0,0,1,0
            元素选择器      0,0,0,1
            通配选择器      0,0,0,0
            继承的样式      0,0,0,0,
    比较优先级时，需要将所有的选择器优先级相加计算，最后优先级越高则越优先显示
    选择器的累加不会超过其最大的数量级，不会出现进位的情况
    如果优先级相同，则会优先使用靠下的样式
    分类选择器中权重不会累加，各算各的

    可以再样式后加!important，则此刻样式获得最高优先级，超过内联样式
    *慎重使用


    字体：
        像素
        百分比
        em
            - em相对于元素字体大小来计算
            - 1em=1font-size
            - em会根据字体大小的改变而改变
            p{
                width:30em;
                font-size:30px
            }此时1em=30px

        rem
            :rem 相对于根元素字体大小来计算
            html{font-size:30px} 此时1rem=30px
*/

/*
 文档流（normal flow）
            -网页是一个多层的结构，一层叠着一层
            -通过css可以分别为每一层设置样式
            -作为用户，我们只能看到做上面一层
            -这些层中，最底层叫做文档流，文档流是网页的基础
                我们所创建的元素都是默认在文档流中进行排列
            -对于我们来说，元素主要有2个状态：
                在文档流中
                不在文档流中

            -元素在文档流中的特点：
                -块元素
                    -块元素会在页面中独占一行（自上而下排列）
                    -默认宽度是父元素的全部（会把父元素撑满）不会因设置宽度变小而改变
                    -默认高度是内容（子元素）撑开的大小

                -行内元素
                    -行内元素不会独占一行，只占自身大小
                    -行内元素在页面中左向右水平排列，如果一行中不能放下，自动转行（和书写习惯一致）
                    -行内元素的默认宽度和高度都是被内容撑开
*/